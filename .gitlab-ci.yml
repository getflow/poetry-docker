stages:
  - docs
  - build

readme:
 tags:
   - getflow
 stage: docs
 image:
   name: chko/docker-pushrm
   entrypoint: ["/bin/sh", "-c", "/docker-pushrm"]
 variables:
   DOCKER_USER: $DOCKER_HUB_USER
   DOCKER_PASS: $DOCKER_HUB_KEY
   PUSHRM_SHORT: Python image with Poetry preinstalled
   PUSHRM_TARGET: docker.io/getflow/python-poetry
   PUSHRM_FILE: $CI_PROJECT_DIR/README.md
 script: "/bin/true"

build:
  tags:
    - getflow
  stage: build
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12"]
        POETRY_VERSION: ["1.5.1", "1.6.1", "1.7.1", "1.8.3"] 
  image: docker:latest
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION --build-arg POETRY_VERSION=$POETRY_VERSION -t getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION -t getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION -f Dockerfile.debian .
    - docker push getflow/python-poetry --all-tags 
  after_script:
    - docker rmi getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION
    - docker logout

build-slim:
  tags:
    - getflow
  stage: build
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9-slim", "3.10-slim", "3.11-slim", "3.12-slim"]
        POETRY_VERSION: ["1.5.1", "1.6.1", "1.7.1", "1.8.3"] 
  image: docker:latest
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION --build-arg POETRY_VERSION=$POETRY_VERSION -t getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION -t getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION -f Dockerfile.debian .
    - docker push getflow/python-poetry --all-tags 
  after_script:
    - docker rmi getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION
    - docker logout

build-apline:
  tags:
    - getflow
  stage: build
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9-alpine", "3.10-alpine", "3.11-alpine", "3.12-alpine"]
        POETRY_VERSION: ["1.5.1", "1.6.1", "1.7.1", "1.8.3"] 
  image: docker:latest
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION --build-arg POETRY_VERSION=$POETRY_VERSION -t getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION -t getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION -f Dockerfile.alpine .
    - docker push getflow/python-poetry --all-tags 
  after_script:
    - docker rmi getflow/python-poetry:$POETRY_VERSION-python$PYTHON_VERSION getflow/python-poetry:${POETRY_VERSION::-2}-python$PYTHON_VERSION
    - docker logout

build-stable:
  tags:
    - getflow
  stage: build
  image: docker:latest
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12"]
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION -t getflow/python-poetry:stable-python$PYTHON_VERSION -f Dockerfile.debian .
    - docker push getflow/python-poetry --all-tags
  after_script:
    - docker rmi getflow/python-poetry:stable-python$PYTHON_VERSION
    - docker logout

build-stable-slim:
  tags:
    - getflow
  stage: build
  image: docker:latest
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9-slim", "3.10-slim", "3.11-slim", "3.12-slim"]
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION -t getflow/python-poetry:stable-python$PYTHON_VERSION -f Dockerfile.debian .
    - docker push getflow/python-poetry --all-tags
  after_script:
    - docker rmi getflow/python-poetry:stable-python$PYTHON_VERSION
    - docker logout

build-stable-alpine:
  tags:
    - getflow
  stage: build
  image: docker:latest
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9-alpine", "3.10-alpine", "3.11-alpine", "3.12-alpine"]
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build --build-arg PYTHON_VERSION=$PYTHON_VERSION -t getflow/python-poetry:stable-python$PYTHON_VERSION -f Dockerfile.alpine .
    - docker push getflow/python-poetry --all-tags
  after_script:
    - docker rmi getflow/python-poetry:stable-python$PYTHON_VERSION
    - docker logout

build-latest:
  tags:
    - getflow
  stage: build
  image: docker:latest
  before_script:
    - echo $DOCKER_HUB_KEY | docker login -u $DOCKER_HUB_USER --password-stdin
  script:
    - docker build -t getflow/python-poetry:latest -f Dockerfile.debian .
    - docker push getflow/python-poetry --all-tags
  after_script:
    - docker rmi getflow/python-poetry:latest
    - docker logout

